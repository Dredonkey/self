/* This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  */\
\
# ifdef INTERFACE_PRAGMAS
# pragma interface
# endif
/* Copyright 1992-2012 AUTHORS.  */\
\
/* See the LICENSE file for license information.  */\
\
# define glue1_entries \
\
{ "uppercase", \
fntype(&uppercase_Uppercase__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "sdlWindowTest", \
fntype(&sdlWindowTest_SdlWindowTest_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "setClipboard", \
fntype(&setClipboard_SetClipboard__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_GetRevision_wrappedsdl_GetRevision", \
fntype(&SDL_GetRevision_wrapped_Sdl_GetRevision_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_GetError_wrappedsdl_GetError", \
fntype(&SDL_GetError_wrapped_Sdl_GetError_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_SetHintsdl_SetHintNameValue:", \
fntype(&SDL_SetHint_Sdl_SetHintName_Value__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_Initsdl_Init", \
fntype(&SDL_Init_Sdl_Init__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_Quitsdl_Quit", \
fntype(&SDL_Quit_Sdl_Quit_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_CreateWindowsdl_CreateWindowTitleW:H:Flags:ResultProxy:", \
fntype(&SDL_CreateWindow_Sdl_CreateWindowTitle_W_H_Flags__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_CreateRenderersdl_CreateRendererWindowName:ResultProxy:", \
fntype(&SDL_CreateRenderer_Sdl_CreateRendererWindow_Name__glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_PollEventsdl_PollEvent", \
fntype(&SDL_PollEvent_Sdl_PollEvent__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_Event_newnewResultProxy", \
fntype(&SDL_Event_new_New_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_Event_deletedelete", \
fntype(&SDL_Event_delete_Delete_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_Event_typetype", \
fntype(&SDL_Event_type_Type_glue), \
ExternalPrimitive, \
IntegerPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_SetRenderVSyncsetVSync:", \
fntype(&SDL_SetRenderVSync_SetVSync__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_RenderPresentpresent", \
fntype(&SDL_RenderPresent_Present_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_SetRenderDrawColorsetDrawColorR:G:B:A:", \
fntype(&SDL_SetRenderDrawColor_SetDrawColorR_G_B_A__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_SetRenderDrawColorFloatsetDrawColorFloatR:G:B:A:", \
fntype(&SDL_SetRenderDrawColorFloat_SetDrawColorFloatR_G_B_A__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_RenderClearrenderClear", \
fntype(&SDL_RenderClear_RenderClear_glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_RenderLinerenderLineX1:Y1:X2:Y2:", \
fntype(&SDL_RenderLine_RenderLineX1_Y1_X2_Y2__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_RenderDebugTextrenderDebugTextX:Y:Str:", \
fntype(&SDL_RenderDebugText_RenderDebugTextX_Y_Str__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_DestroyRendererdestroy", \
fntype(&SDL_DestroyRenderer_Destroy_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_GetRendererName_wrappedgetRendererName", \
fntype(&SDL_GetRendererName_wrapped_GetRendererName_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_SetWindowAlwaysOnTopsetAlwaysOnTop:", \
fntype(&SDL_SetWindowAlwaysOnTop_SetAlwaysOnTop__glue), \
ExternalPrimitive, \
BooleanPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \
{ "SDL_DestroyWindowdestroy", \
fntype(&SDL_DestroyWindow_Destroy_glue), \
ExternalPrimitive, \
UnknownPrimType, \
true, /* can fail               */ \
false, /* can scavenge           */ \
false, /* can be constant folded */ \
true, /* cannot be moved or cut */ \
false, /* can walk stack         */ \
false, /* can abort process      */ \
"Generated by the primitive maker" },\
 \


/* This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  */\
\
# ifdef INTERFACE_PRAGMAS
# pragma interface
# endif
/* Copyright 1992-2012 AUTHORS.  */\
\
/* See the LICENSE file for license information.  */\
\
# define glue1_glue    \
\
 C_func_1( string,, uppercase, uppercase_Uppercase__glue, , string,) \
 C_func_0( void,, sdlWindowTest, sdlWindowTest_SdlWindowTest_glue, ) \
 C_func_1( void,, setClipboard, setClipboard_SetClipboard__glue, , string,) \
 C_func_0( string,, SDL_GetRevision_wrapped, SDL_GetRevision_wrapped_Sdl_GetRevision_glue, ) \
 C_func_0( string,, SDL_GetError_wrapped, SDL_GetError_wrapped_Sdl_GetError_glue, ) \
 C_func_2( bool,, SDL_SetHint, SDL_SetHint_Sdl_SetHintName_Value__glue, , string,, string,) \
 C_func_1( bool,, SDL_Init, SDL_Init_Sdl_Init__glue, , unsigned_int,) \
 C_func_0( void,, SDL_Quit, SDL_Quit_Sdl_Quit_glue, ) \
 C_func_4( proxy,(SDL_Window*,SDL_Window_seal), SDL_CreateWindow, SDL_CreateWindow_Sdl_CreateWindowTitle_W_H_Flags__glue, , string,, int,, int,, unsigned_long,) \
 C_func_2( proxy,(SDL_Renderer*,SDL_Renderer_seal), SDL_CreateRenderer, SDL_CreateRenderer_Sdl_CreateRendererWindow_Name__glue, , proxy,(SDL_Window*,SDL_Window_seal), string,) \
 C_func_1( bool,, SDL_PollEvent, SDL_PollEvent_Sdl_PollEvent__glue, , proxy,(SDL_Event*,SDL_Event_seal)) \
 CC_new_0( proxy,(SDL_Event*,SDL_Event_seal), SDL_Event, SDL_Event_new_New_glue) \
 CC_delete( proxy,(SDL_Event*,SDL_Event_seal), SDL_Event_delete_Delete_glue) \
 C_get_comp( unsigned_int,, proxy,(SDL_Event*,SDL_Event_seal), .type, SDL_Event_type_Type_glue) \
 C_func_2( bool,, SDL_SetRenderVSync, SDL_SetRenderVSync_SetVSync__glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal), int,) \
 C_func_1( bool,, SDL_RenderPresent, SDL_RenderPresent_Present_glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal)) \
 C_func_5( bool,, SDL_SetRenderDrawColor, SDL_SetRenderDrawColor_SetDrawColorR_G_B_A__glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal), unsigned_char,, unsigned_char,, unsigned_char,, unsigned_char,) \
 C_func_5( bool,, SDL_SetRenderDrawColorFloat, SDL_SetRenderDrawColorFloat_SetDrawColorFloatR_G_B_A__glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal), float,, float,, float,, float,) \
 C_func_1( bool,, SDL_RenderClear, SDL_RenderClear_RenderClear_glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal)) \
 C_func_5( bool,, SDL_RenderLine, SDL_RenderLine_RenderLineX1_Y1_X2_Y2__glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal), float,, float,, float,, float,) \
 C_func_4( bool,, SDL_RenderDebugText, SDL_RenderDebugText_RenderDebugTextX_Y_Str__glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal), float,, float,, string,) \
 C_func_1( void,, SDL_DestroyRenderer, SDL_DestroyRenderer_Destroy_glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal)) \
 C_func_1( string,, SDL_GetRendererName_wrapped, SDL_GetRendererName_wrapped_GetRendererName_glue, , proxy,(SDL_Renderer*,SDL_Renderer_seal)) \
 C_func_2( bool,, SDL_SetWindowAlwaysOnTop, SDL_SetWindowAlwaysOnTop_SetAlwaysOnTop__glue, , proxy,(SDL_Window*,SDL_Window_seal), bool,) \
 C_func_1( void,, SDL_DestroyWindow, SDL_DestroyWindow_Destroy_glue, , proxy,(SDL_Window*,SDL_Window_seal)) \


