" This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91  "

" Copyright 1992-2012 AUTHORS.  "

" See the LICENSE file for license information.  "

globals glue1 _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  uppercase: t0  = (

       uppercase: t0 IfFail: 
        [|:e| ^error: 'uppercase: failed: ', e] ).

  uppercase: t0 IfFail: fb = (
    |

    |

      t0 _uppercaseIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _uppercaseIfFail: fb 
           ]] ).


  sdlWindowTest = (

       sdlWindowTestIfFail: 
        [|:e| ^error: 'sdlWindowTest failed: ', e] ).

  sdlWindowTestIfFail: fb = (
    |

    |

      "ignored" _sdlWindowTestIfFail: fb .
    self).


  setClipboard: t0  = (

       setClipboard: t0 IfFail: 
        [|:e| ^error: 'setClipboard: failed: ', e] ).

  setClipboard: t0 IfFail: fb = (
    |

    |

      t0 _setClipboardIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _setClipboardIfFail: fb 
           ]] .
    self).


	}
| )

globals sdl _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  sdl_GetRevision = (

       sdl_GetRevisionIfFail: 
        [|:e| ^error: 'sdl_GetRevision failed: ', e] ).

  sdl_GetRevisionIfFail: fb = (
    |

    |

      "ignored" _SDL_GetRevision_wrappedsdl_GetRevisionIfFail: fb ).


  sdl_GetError = (

       sdl_GetErrorIfFail: 
        [|:e| ^error: 'sdl_GetError failed: ', e] ).

  sdl_GetErrorIfFail: fb = (
    |

    |

      "ignored" _SDL_GetError_wrappedsdl_GetErrorIfFail: fb ).


  sdl_SetHintName: t0 Value: t1  = (

       sdl_SetHintName: t0 Value: t1 IfFail: 
        [|:e| ^error: 'sdl_SetHintName:Value: failed: ', e] ).

  sdl_SetHintName: t0 Value: t1 IfFail: fb = (
    |

    |

      t0 _SDL_SetHintsdl_SetHintNameValue: t1 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _SDL_SetHintsdl_SetHintNameValue: t1 asVMByteVector IfFail: 
                    fb 
           ]] ).


  sdl_Init: t0  = (

       sdl_Init: t0 IfFail: [|:e| ^error: 'sdl_Init: failed: ', e] ).

  sdl_Init: t0 IfFail: fb = (
    |

    |

      t0 _SDL_Initsdl_InitIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asSmallInteger _SDL_Initsdl_InitIfFail: fb 
           ]] ).


  sdl_Quit = (

       sdl_QuitIfFail: [|:e| ^error: 'sdl_Quit failed: ', e] ).

  sdl_QuitIfFail: fb = (
    |

    |

      "ignored" _SDL_Quitsdl_QuitIfFail: fb .
    self).


  sdl_CreateWindowTitle: t0 W: t1 H: t2 Flags: t3  = (

       sdl_CreateWindowTitle: t0 W: t1 H: t2 Flags: t3 IfFail: 
        [|:e| ^error: 'sdl_CreateWindowTitle:W:H:Flags: failed: ', e] ).

  sdl_CreateWindowTitle: t0 W: t1 H: t2 Flags: t3 IfFail: fb = (
    |

    |

      t0 _SDL_CreateWindowsdl_CreateWindowTitleW: t1 H: t2 Flags: t3 
        ResultProxy: sdl sdl_Window deadCopy IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  t0 asVMByteVector _SDL_CreateWindowsdl_CreateWindowTitleW: t1 asSmallInteger 
                    H: t2 asSmallInteger Flags: 
                    t3 asSmallInteger ResultProxy: 
                    sdl sdl_Window deadCopy IfFail: fb 
           ]] ).


  sdl_CreateRendererWindow: t0 Name: t1  = (

       sdl_CreateRendererWindow: t0 Name: t1 IfFail: 
        [|:e| ^error: 'sdl_CreateRendererWindow:Name: failed: ', e] ).

  sdl_CreateRendererWindow: t0 Name: t1 IfFail: fb = (
    |

    |

      t0 _SDL_CreateRenderersdl_CreateRendererWindowName: t1 
        ResultProxy: sdl sdl_Renderer deadCopy IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _SDL_CreateRenderersdl_CreateRendererWindowName: 
                    t1 asVMByteVector ResultProxy: 
                    sdl sdl_Renderer deadCopy IfFail: fb 
           ]] ).


  sdl_PollEvent: t0  = (

       sdl_PollEvent: t0 IfFail: 
        [|:e| ^error: 'sdl_PollEvent: failed: ', e] ).

  sdl_PollEvent: t0 IfFail: fb = (
    |

    |

      t0 _SDL_PollEventsdl_PollEventIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  (t0 reviveIfFail: [|:e| ^ fb value: e]) _SDL_PollEventsdl_PollEventIfFail: fb 
           ]] ).


	}
| )

traits sdl sdl_Event _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  new = (

       newIfFail: [|:e| ^error: 'new failed: ', e] ).

  newIfFail: fb = (
    |

    |

      sdl sdl_Event deadCopy _SDL_Event_newnewResultProxyIfFail: fb ).


  delete = (

       deleteIfFail: [|:e| ^error: 'delete failed: ', e] ).

  deleteIfFail: fb = (
    |

    |

       _SDL_Event_deletedeleteIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_Event_deletedeleteIfFail: fb 
           ]] .
    self).


  type = (

       typeIfFail: [|:e| ^error: 'type failed: ', e] ).

  typeIfFail: fb = (
    |

    |

       _SDL_Event_typetypeIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_Event_typetypeIfFail: fb 
           ]] ).


	}
| )

traits sdl sdl_Renderer _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  setVSync: t0  = (

       setVSync: t0 IfFail: [|:e| ^error: 'setVSync: failed: ', e] ).

  setVSync: t0 IfFail: fb = (
    |

    |

       _SDL_SetRenderVSyncsetVSync: t0 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_SetRenderVSyncsetVSync: t0 asSmallInteger IfFail: fb 
           ]] ).


  present = (

       presentIfFail: [|:e| ^error: 'present failed: ', e] ).

  presentIfFail: fb = (
    |

    |

       _SDL_RenderPresentpresentIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_RenderPresentpresentIfFail: fb 
           ]] ).


  setDrawColorR: t0 G: t1 B: t2 A: t3  = (

       setDrawColorR: t0 G: t1 B: t2 A: t3 IfFail: 
        [|:e| ^error: 'setDrawColorR:G:B:A: failed: ', e] ).

  setDrawColorR: t0 G: t1 B: t2 A: t3 IfFail: fb = (
    |

    |

       _SDL_SetRenderDrawColorsetDrawColorR: t0 G: t1 B: t2 A: t3 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_SetRenderDrawColorsetDrawColorR: t0 asSmallInteger G: 
                    t1 asSmallInteger B: t2 asSmallInteger 
                    A: t3 asSmallInteger IfFail: fb 
           ]] ).


  setDrawColorFloatR: t0 G: t1 B: t2 A: t3  = (

       setDrawColorFloatR: t0 G: t1 B: t2 A: t3 IfFail: 
        [|:e| ^error: 'setDrawColorFloatR:G:B:A: failed: ', e] ).

  setDrawColorFloatR: t0 G: t1 B: t2 A: t3 IfFail: fb = (
    |

    |

       _SDL_SetRenderDrawColorFloatsetDrawColorFloatR: t0 G: t1 B: 
        t2 A: t3 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_SetRenderDrawColorFloatsetDrawColorFloatR: t0 asFloat 
                    G: t1 asFloat B: t2 asFloat A: 
                    t3 asFloat IfFail: fb 
           ]] ).


  renderClear = (

       renderClearIfFail: [|:e| ^error: 'renderClear failed: ', e] ).

  renderClearIfFail: fb = (
    |

    |

       _SDL_RenderClearrenderClearIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_RenderClearrenderClearIfFail: fb 
           ]] ).


  renderLineX1: t0 Y1: t1 X2: t2 Y2: t3  = (

       renderLineX1: t0 Y1: t1 X2: t2 Y2: t3 IfFail: 
        [|:e| ^error: 'renderLineX1:Y1:X2:Y2: failed: ', e] ).

  renderLineX1: t0 Y1: t1 X2: t2 Y2: t3 IfFail: fb = (
    |

    |

       _SDL_RenderLinerenderLineX1: t0 Y1: t1 X2: t2 Y2: t3 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_RenderLinerenderLineX1: t0 asFloat Y1: t1 asFloat X2: 
                    t2 asFloat Y2: t3 asFloat IfFail: fb 
           ]] ).


  renderDebugTextX: t0 Y: t1 Str: t2  = (

       renderDebugTextX: t0 Y: t1 Str: t2 IfFail: 
        [|:e| ^error: 'renderDebugTextX:Y:Str: failed: ', e] ).

  renderDebugTextX: t0 Y: t1 Str: t2 IfFail: fb = (
    |

    |

       _SDL_RenderDebugTextrenderDebugTextX: t0 Y: t1 Str: t2 
        IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_RenderDebugTextrenderDebugTextX: t0 asFloat Y: 
                    t1 asFloat Str: t2 asVMByteVector 
                    IfFail: fb 
           ]] ).


  destroy = (

       destroyIfFail: [|:e| ^error: 'destroy failed: ', e] ).

  destroyIfFail: fb = (
    |

    |

       _SDL_DestroyRendererdestroyIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_DestroyRendererdestroyIfFail: fb 
           ]] .
    self).


  getRendererName = (

       getRendererNameIfFail: 
        [|:e| ^error: 'getRendererName failed: ', e] ).

  getRendererNameIfFail: fb = (
    |

    |

       _SDL_GetRendererName_wrappedgetRendererNameIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_GetRendererName_wrappedgetRendererNameIfFail: fb 
           ]] ).


	}
| )

traits sdl sdl_Window _AddSlots: ( |

{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

	}
{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

  setAlwaysOnTop: t0  = (

       setAlwaysOnTop: t0 IfFail: 
        [|:e| ^error: 'setAlwaysOnTop: failed: ', e] ).

  setAlwaysOnTop: t0 IfFail: fb = (
    |

    |

       _SDL_SetWindowAlwaysOnTopsetAlwaysOnTop: t0 IfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_SetWindowAlwaysOnTopsetAlwaysOnTop: t0 IfFail: fb 
           ]] ).


  destroy = (

       destroyIfFail: [|:e| ^error: 'destroy failed: ', e] ).

  destroyIfFail: fb = (
    |

    |

       _SDL_DestroyWindowdestroyIfFail: 
        
      [|:e| ('badTypeError'   isPrefixOf: e)
        ||  ['deadProxyError' isPrefixOf: e]
           ifFalse: [^fb value: e] 
              True: [
                  ( reviveIfFail: [|:e| ^ fb value: e]) _SDL_DestroyWindowdestroyIfFail: fb 
           ]] .
    self).


	}
| )

modules _AddSlots: ( |
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		glue1_wrappers = ()
	}
| )

modules glue1_wrappers _AddSlots: (
	bootstrap remove: 'directory' From:
	bootstrap remove: 'fileInTimeString' From:
	bootstrap remove: 'myComment' From:
	bootstrap remove: 'postFileIn' From:
	bootstrap remove: 'revision' From:
	bootstrap remove: 'subpartNames' From:
	globals modules init copy) _AddSlots: ( |
	{} = 'Comment: This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 \x7fModuleInfo: Creator: globals modules glue1_wrappers.

CopyDowns:
globals modules init. copy 
SlotsToOmit: directory fileInTimeString myComment postFileIn revision subpartNames.

\x7fIsComplete: '.

	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: InitializeToExpression: (_CurrentTimeString)\x7fVisibility: public'

		fileInTimeString <- _CurrentTimeString.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot'

		myComment <- '
		This information was generated by the primitive maker (primitiveMaker.self).
Please do not change it manually. -- dmu 12/91 .'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		directory <- 'glue'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: public'

		revision <- 'No revision; generated file'.
	}
	{ 'Category: generated by primitiveMaker\x7fModuleInfo: Module: glue1_wrappers InitialContents: FollowSlot\x7fVisibility: private'

		subpartNames <- ''.
	}
| )


